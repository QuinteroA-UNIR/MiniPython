// markers
terminal LINE_END, TAB;
// idents
terminal IDENT;
// constants
terminal C_BOOL, C_INT, C_REAL, C_TXT;
// operators
terminal OP_EQ;
//arithmetic
terminal O_PLUS, O_MINUS, O_MULT, O_DIV, O_MOD, O_POW, O_FLOOR;
//comparison
terminal O_COMPARE, O_DISTINCT, O_GT, O_LT, O_GET, O_LET;
//boolean
terminal O_AND, O_OR, O_NOT;
// reserved kw 
terminal P_PRINT ,P_IF ,P_ELSE ,P_ENDIF ,P_FOR ,P_IN ,P_ENDFOR ,P_DEF ,P_ENDDEF;
// delimiters
terminal D_PARENTHESIS_L, D_PARENTHESIS_R, D_BRACKET_L, D_BRACKET_R, D_BRACE_L, D_BRACE_R, D_COMMA, D_COLON;


non terminal program, statement, simple_statement, assign, assignee, constant;
non terminal tuple, tuple_content;
non terminal text, text_constants;
non terminal numeric, numeric_constants;
non terminal boolean, boolean_constants;
non terminal arithmetic, arithmetic_op, extra_arithmetic ,arithmetic_operands;
non terminal comparison, comparison_op, extra_comparison, comparison_operands;
non terminal boolean_arith, boolean_op, extra_boolean, boolean_operands;

program                 ::= statement program
                        | LINE_END program
                        |
                        ;

statement               ::= simple_statement
                        ;

simple_statement        ::= assign
                        | constant
                        ;

arithmetic_operands     ::= numeric_constants
                        | IDENT
                        ;

comparison_operands     ::= numeric_constants
                        | boolean_constants
                        | text_constants
                        | IDENT
                        ;

boolean_operands        ::= O_NOT boolean_operands
                        | boolean_constants
                        | IDENT
                        ;

arithmetic              ::= arithmetic_operands arithmetic_op arithmetic_operands extra_arithmetic
                        ;

extra_arithmetic        ::= arithmetic_op arithmetic_operands extra_arithmetic
                        |
                        ;

comparison              ::= comparison_operands comparison_op comparison_operands extra_comparison
                        ;
                
extra_comparison        ::= comparison_op comparison_operands extra_comparison
                        |
                        ;

boolean_arith           ::= boolean_operands boolean_op boolean_operands extra_boolean
                        ;

extra_boolean           ::= boolean_op boolean_operands extra_boolean
                        |
                        ;

arithmetic_op            ::= O_PLUS
                        | O_MINUS
                        | O_MULT
                        | O_DIV
                        | O_MOD
                        | O_POW
                        | O_FLOOR
                        ;

comparison_op           ::= O_COMPARE
                        | O_DISTINCT
                        | O_GT
                        | O_LT
                        | O_GET
                        | O_LET
                        ;

boolean_op              ::= O_AND
                        | O_OR
                        ;

assign                  ::= IDENT OP_EQ assignee
                        ;

assignee                ::= constant
                        | tuple
                        ;

tuple                   ::= D_PARENTHESIS_L constant tuple_content D_PARENTHESIS_R
                        ;
                
tuple_content           ::= D_COMMA constant tuple_content
                        | 
                        ;

numeric                 ::= numeric_constants
                        | arithmetic
                        ;

boolean                 ::= boolean_constants
                        | comparison
                        | boolean_arith
                        | O_NOT boolean_constants
                        ;

text                    ::= text_constants
                        ;

constant                ::= boolean
                        | text
                        | numeric
                        | IDENT
                        ;

numeric_constants       ::= C_INT
                        | C_REAL
                        ;

boolean_constants       ::= C_BOOL
                        ;

text_constants          ::= C_TXT
                        ;
